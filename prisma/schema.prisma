generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Club {
    id       String     @id @default(uuid())
    name     String     @unique @db.VarChar(100)
    email    String     @unique @db.VarChar(100)
    password String
    RoomBook RoomBook[]
}

model Admin {
    id       String     @id @default(uuid())
    name     String     @unique @db.VarChar(100)
    email    String     @unique @db.VarChar(100)
    password String
    RoomBook RoomBook[]
}

model Room {
    id         String @id @default(uuid())
    blockName  String @unique @db.VarChar(2)
    roomNumber String
}

model AvailableRoom {
    id         String @id @default(uuid())
    blockName  String @unique @db.VarChar(2)
    roomNumber String
    date       String 
}

model RoomBook {
    id            String @id @default(uuid())
    club          Club   @relation(fields: [clubId], references: [id])
    blockName     String @unique @db.VarChar(2)
    number        String
    time          Float
    duration      Float
    signedBy      String @db.VarChar(100)
    approvedBy    Admin  @relation(fields: [adminId], references: [id])
    clubId        String @db.VarChar(100)
    roomBlockName String @db.VarChar(2)
    adminId       String
}

// model AvailableRoom{
//     // Which room
//     roomId String @id
//     room Room @relation(fields: [roomId], references: [id])
//     // When
//     date String
//     // What time
//     time Float
// }

// model RoomBook{
//     duration Float
//     // Which corresponds to bookingId can use this to delete the booking after the time is over
//     bookingId String @id @default(uuid())
//     room AvailableRoom @relation(fields: [roomId], references: [roomId])
//     // What room
//     roomId String
//     club Club @relation(fields: [clubId], references: [id])
//     // Which club
//     clubId String
//     admin Admin @relation(fields: [adminId], references: [id])
//     // Which admin approved
//     adminId String
// }
